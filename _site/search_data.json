{
  

    "map-pool": {
      "title": "Map Pool",
      "content"	 : "A map pool will plot multiple maps in the same plot and generate pooled statistics across these maps. The maps that go into a pool are specified by their ‘map condition’. In a normal map plot, the X-axis is often session or days. In a pooled plot, the X-axis is defined by each sessions ‘session condition’.A powerful additional feature is that individual spine values can be grouped (by their average) across multiple sessions in a map.Recipe to create a map pool  Specify ‘map conditions’ and ‘session conditions’ by turning on the ‘Edit Conditions’ checkbox  in main time-series window.  Open the pool plot panel from the main time-series window, ‘Pool’ button.  In the pool plot panel, specify a list of ‘map conditions’ and ‘session conditions’. Make sure the lists use ‘;’ as a separator.  In the pool plot panel, select a Y and X statistic to go into the pool.  In the pool plot panel, press ‘Make Group Pool’ to open a database window and a group plot window window.Note: The wildcard * character can be used when specifying ‘session conditions’. For example, if a few session are control sessions and they are labelled ‘c1’, ‘c2’, ‘c3’, creating a pool using c*; will average all CONNECTED spines across sessions c1/c2/c3 into a single group named c*.Pool Plot Panel      The maps and sessions that go into a pool are defined by the specified ‘map conditions’ and ‘session conditions’. If these map and session conditions are kept the same, a number of group plots with different x/y stats can be created (with ‘make group pool’) and they will all share the same Pool Database Window.        Each of these group plots can be returned to by selecting a plot in the ‘Pool ID’ popup and pressing the ‘Plot’ button.        Note: Grouped plots visualize the Y-stat versus ‘session conditions’ groups. The X-stat is used later to make Grouped Session Plot(s).  Pool Database Window  Selecting a ‘Cond’, ‘Map’, or ‘Seg’ in the database window will select the corresponding object in all opened Group Plot Window and Grouped Session Plot windows.  Individual conditions, maps, and segments can be turned on and off using the checkboxes. When this is done, the object is removed from the group plot window and does not contribute to statistics generated by the ‘stat table’ button.  Each map condition gets a color.  The color is shown by coloring the text for the condition in the pool database window and coloring the markers in the group plot windowGroup Plot Window.  The x-axis is the session conditions that went into the pool, we call these groups.  The y-axis is the Y-stat that went into the pool.  The marker colors indicate different map conditions.  Important: If the group plot was made using the wildcard * for session conditions (something like c*;), the individual markers in this plot are the AVERAGE of all connected spines within this session group.  Transform the Y-axis with ‘Transform’ popup. Transformations like % are normalized to the session condition group specified in the ‘Norm’ popup.  Make grouped session plot(s) using the ‘Session Plot’ button. This is where the original X-stat is finally used.  The ‘Stat Table’ button will generate a Grouped Plot Stat Table. The stats will always be derived from what is currently displayed in the plot. If the Y-Axis has been transformed to %, the stat table will contain mean/sd/se/n for %.  The ‘Edit Plot Values’ button wil generate a table with all the raw values currently displayed in the group plot window.Grouped Session Plot  Create a grouped session plot using the ‘session plot’ button in the group plot window.  Selecting an object in the grouped session plot will select the corresponding object in the group plot window and vice versa.  Keyboard ‘e’ will open a table of values displayed in the grouped session plot.For example, this is a Grouped Session Plot of: Y: b* % a* versus X: b* Raw. As always, the marker colors are indicating the map conditions.Grouped Plot Stat TableThe grouped plot stat table shows statistics (mean/sd/se/n) for the values currently displayed in the Group Plot Window. The stats are fairly thourough and are broken  into three blocks, the first block is mean/sd/se/n for map condition, the second block is for session condition, and the third is per segment.",
      "url": "/Map-Pool",
      "author": "",
      "category": "analysis",
      "date": "Aug 2017"
    }
    ,
  

    "plotting": {
      "title": "Plotting",
<<<<<<< HEAD
      "content"	 : "This was started on March 7, 2017 and is NOT FINISHEDThis is an overview. Please see the main Plot Panel, Stack Plot, and Map Plot.Map Manager plots values for each 3D annotation. Plots can be made from a stack, a map, and a pool of maps. These plots are very powerful because they are linked to the raw data. If a plot point looks suspicious, one can always return to the raw image data. Finally, these plots are powerful as they are publication ready.Plotting from a single stackFor a single stack, open the Point List window. Use the ‘Plot’ button to make Y vs X plots for values from the stack. Each point plotted is for a single 3D object (e.g. a spine). Right click on column row in the table and select ‘Set X Stat’ or ‘Set Y Stat’ to use the values in the column for plotting.Plotting from a mapUse the ‘Plot’ tab in the main time-series window. There are default plots provided here including ‘Spine Length’ as well as intensity measures such as:  Spine Sum: sSum  Spine Background Sum: sbSum  Background Subtracted Spine Sum: bssSum  Dendrite Sum: dSum  Dendrite Background Sum: dbSum  Background Subtracted Dendrite Sum: bsdSumAdvanced plotting with the Plot PanelOpen the main plot panel from the main time-series window using the ‘Plot’ button.The general idea is to select a Y value from the list, a corresponding X value and make a plot. All plots will show the values for individual 3D annotations (one annotation per point in the plot). There are two types of plots  Spine Plot Map - To plot a Y value versus an X map value such as days or hours. Add example  Session Plot (Map) - To plot values from 2 different sessions/timepoints. Use this to see how objects change from one time-point to the next. Add examplePlotting a map poolA map pool will make one plot holding data from a number of maps. There are two types of map pools, just like there are two types of plots.  Time-series pool - Map Pool (Time-Series)  Session pool - Map Pool(Sessions)The interface to creating a map pool from a number of open maps is in the Plot Panel.Plot Window InterfaceOnce a plot is made from a stack or a map, Map Manager provides a unified interface.  To get back to the raw stack. Select a point, right-click and choose a menu option.          Plot Stack      Plot Spine      Plot Run +/- 1      Plot Run +/- All      Plot Run +/- n        For spines, show only spines on a single dendrite or all dendrites. Do this by setting ‘Map Segment ID’ and/or the ‘All Segments’ checkbox.  Generate tables of numbers and statistics. Use the ‘Stats’ button. These can easily be copied and pasted into other analysis software.  Click and drag to visually select subsets of objects. There are three different selections, turn each one on with the 1/2/3 radio buttons. Once created, the ‘Stats’ button will include the statistics for these manual selections in the output table.",
=======
      "content"	 : "This was started on March 6, 2017 and is NOT FINISHEDThis is an overview. Please see the main Plot Panel, Stack Plot, and Map Plot.Map Manager plots values for each 3D annotation. Plots can be made from a stack, a map, and a pool of maps. These plots are very powerful because they are linked to the raw data. If a plot point looks suspicious, one can always return to the raw image data. Finally, these plots are powerful as they are publication ready.Plotting from a single stackFor a single stack, open the Point List window. Use the ‘Plot’ button to make Y vs X plots for values from the stack. Each point plotted is for a single 3D object (e.g. a spine). Right click on column row in the table and select ‘Set X Stat’ or ‘Set Y Stat’ to use the values in the column for plotting.Plotting from a mapUse the ‘Plot’ tab in the main time-series window. There are default plots provided here including ‘Spine Length’ as well as intensity measures such as:  Spine Sum: sSum  Spine Background Sum: sbSum  Background Subtracted Spine Sum: bssSum  Dendrite Sum: dSum  Dendrite Background Sum: dbSum  Background Subtracted Dendrite Sum: bsdSumAdvanced plotting with the Plot PanelOpen the main plot panel from the main time-series window using the ‘Plot’ button.The general idea is to select a Y value from the list, a corresponding X value and make a plot. All plots will show the values for individual 3D annotations (one annotation per point in the plot). There are two types of plots  Spine Plot Map - To plot a Y value versus an X map value such as days or hours. Add example  Session Plot (Map) - To plot values from 2 different sessions/timepoints. Use this to see how objects change from one time-point to the next. Add examplePlotting a map poolA map pool will make one plot holding data from a number of maps. There are two types of map pools, just like there are two types of plots.  Time-series pool - Map Pool (Time-Series)  Session pool - Map Pool(Sessions)The interface to creating a map pool from a number of open maps is in the Plot Panel.Plot Window InterfaceOnce a plot is made from a stack or a map, Map Manager provides a unified interface.  To get back to the raw stack. Select a point, right-click and choose a menu option.          Plot Stack      Plot Spine      Plot Run +/- 1      Plot Run +/- All      Plot Run +/- n        For spines, show only spines on a single dendrite or all dendrites. Do this by setting ‘Map Segment ID’ and/or the ‘All Segments’ checkbox.  Generate tables of numbers and statistics. Use the ‘Stats’ button. These can easily be copied and pasted into other analysis software.  Click and drag to visually select subsets of objects. There are three different selections, turn each one on with the 1/2/3 radio buttons. Once created, the ‘Stats’ button will include the statistics for these manual selections in the output table.Group PlotsGroup plots allow you to plot the mean for a spine across a number of sessions.  Specify session conditions for a map in main time-series window.  Specify a list of conditions to plot in main plot panel ‘Session Conditions’. This is a semicolon separated list and accepts ‘’ as a wildcard. For example ‘a;b;c’  Plot the group plot with the ‘Group Plot’ button in the main plot panel",
>>>>>>> origin/gh-pages
      "url": "/Plotting",
      "author": "",
      "category": "analysis",
      "date": "Mar 2017"
    }
    ,
  

    "algorithms": {
      "title": "Algorithms",
      "content"	 : "Map Manager uses a range of algorithms at different stages of the analysisWithin a single timepointCalculating distance along a segment and segment lengthEach point in the 3D tracing of a segment is assigned a 3D distance from the start of the segment. For calculating the total segment length, used in segment reports, the Z values of the 3D line segment fit are first smoothed. For a segment running parallel to a single image plane, the actual Z-values of the fitted 3D line tend to jump up and down between adjacent imaging planes. This causes an accumulation of erronious length and the total length is thus an overestimate of the ‘real’ length. By smoothing the Z values of a segment (before segment length calculation) we reduce this additive error.Connecting a spine to its segmentSpines are automatically connected to their respective dendritic segments by finding the line with the brightest pixels between the spine head and its segment.Starting from the closest point on the segment tracing, a number of candidate lines are drawn between the spine head and the nearby dendritic segment and the line with the brightest intensity is chosen. There will sometimes be errors in this calculation, especially when there is curvature in the dendritic segment, resulting in the starting point being mis-identified. These are easy to fix by right-clicking a spine, selecting ‘manually connect’ and then clicking on the center dendritic line to specify it connection point.The number of lines to search is a parameter.Line Points To Search When Connecting Spine/BoutonSpine intensity analysisSee intensity analysis.In a time-seriesFinding corresponding pointsPivot points are used to identify corresponding regions between image stacks in a time-series. Pivot points are regular 3D annotations that must be manually positioned to correspond to a structure that is present in each stack of a time-series. Map Manager can then snap to corresponding regions of an image in multiple timepoints by snapping to the same 3D offset with respect to each image stacks 3D pivot point.Connect points within this distance (um)Finding corresponding spinesDistance away from segment pivot point is used.Connect spines within this distance (um)",
      "url": "/Algorithms",
      "author": "",
      "category": "analysis",
      "date": "Jul 2016"
    }
    ,
  

    "point-list": {
      "title": "Point List",
      "content"	 : "The point list panel displays a list of points for one stack.To open a point list panel  Right-click a stack and select the menu ‘Windows … Point List’.  In a stack window, use the ‘Point List’ button in the left-panel. Open the left-panel with keyboard ‘[’.InterfaceSelect individual points in the list and the selection will propagate to open stack windows, stack plots and map plot windows. Use the center on selection checkbox to automatically snap selected objects in their stack windw.Keyboard ‘b’ will toggle the selected object between bad and good.When a point is selected, its text note will be displayed at the bottom of the window. The note can then be edited.Edit User TypeTurn on the ‘Edit User Type’ checkbox and the point list window will respond to the following keystrokes to set the value of ‘userType’:            Index      Key      Result                  0      u      Unknown              1      m      Mushroom              2      f      Filapodia              3      l      Long              4      s      Stubby                     Del      -clear the entry-      Counts for each of these user types are included for each segment in each segment report.Edit User 1/2/3Turn on the ‘Edit User 1/2/3’ checkbox and the point list window will respond to the following keystrokes:            Key      Sets      Meaning                  6      user1      Match              7      user2      No Match              8      user3      Partial Match              9      userBool1      Inverse Match              0      -clear all entries-      Clear      Counts for each of these user types are included for each stack in each stack report.PlottingRight-click a column header and select Quick Plot to plot that stat versus the sequential number of each spine. The sequential number of each spine is the order they were created in, it is not the order along the dendrite.Any two columns can be plotted as X and Y. Right click a column and select Set X Stat, then right-click another column and select Set Y Stat. Then use the main Plot button to plot X versus Y.For example, to plot ‘spine length 3d’ versus ‘background subtracted spine sum’.  Right-click on ‘sLen3d’ column and select ‘Set Y Stat’  Right-click on ‘ubssSum’ column and select ‘Set X Stat’  Click the main ‘Plot’ button.ColumnsTo make the table easier to read, columns can be turned on and off with the check-boxes in the Columns group.Clicking on a column header will sort the table by that column. Shit+click the column header to reverse sort. Right click a column header to plot the values in the column.The error column will display errors encountered while running intensity analysis.Here is a partial list of the meaning of each column. See intensity for a list of the meaning of additional columns.            Column      Meaning                  Idx      The row in the table              dbIdx      The row in the stack db              roiType      The type of the point (spineROI, controlPnt, otherROI)              isBad      A ‘1’ if the point is marked bad. Toggle this with keyboard ‘b’              intBad      A ‘1’ if the point ismarked intensity bad              z      The z-image plane the point is in              parentID      The segment number a point (spine) belongs to              nnDist      Distance (um) to the nearest spine.              dDist      The distance (um) along the segment the point (spine) is attached to.              pDist      Only for maps, the distance (plus or minus) away from the pivot point      ",
      "url": "/point-list",
      "author": "",
      "category": "interface",
      "date": "Jun 2016"
    }
    ,
  

    "release-notes": {
      "title": "Release Notes",
      "content"	 : "20170123, Distributed MapManager to Zeng-You and Julia (Linden), Richard (Huganir)This is a major release with new features, improvements, and bug fixes. A full list of these will follow.20161012, Distributed MapManager to Julia (Linden)20160722. Distributed MapManager to Allen (Linden)20160630. Distributed MapManager to Mengnan (Huganir)20160422 Update (file version 20151224)This is a major release with new features, improvements, and bug fixes. The file format has not changed but the options have. Please remake your options!New Features      Jumping spinesJumping spines are specified just like other persistent spines. select spines in both time-points and hit keyboard ‘p’. When you make jumping spines, the source and destination spines are required to be subtraction and addition respectively.        Added jumping to map search        No more limitation on length of file names when importing into stack browser        Plot run +/- now has option to set ‘row’ of run    Added ‘Div’ option to plot panel.      Added option to normalize all spines to a constant value        Segment density report now has segment position information {zMin, zMax, zMean, zMedian, xyAngle, tort}    Main map manager panel now remembers its position      Main map plot now remembers its position    Conrol click on ‘close all windows’ will now close tablesImprovements      Fast left/right mouse click should no longer be a problem.        User clicks during long operations like opening a run should no longer be a problem.        Updated coloring of spines in map plot. If there is no previous segment, spines are no longer marked as added (green). If there is no next segment, spines are no longer marked as subtracted (red). Same rules for transient (blue).    Map Plot. Snapping a marquee rectangle and right-click to make a selection now prints the mean/sd/se/n for both x and y axis.      Map Plot. Snapping a marquee rectangle and right-click to make a selection now works for +/- from mask.        Stats button in map plot will now report grand mean of all spine masks in plot (previously was only per segment).    All spine dynamics now plot following colors and size specified in table in options panel.      The size of masks in map plots now follow ‘pntSel’ in main map manager options panel.        Revamped example user file. tried to make it clear that this can be empty and that values specified will over-ride setting in main options panel.    Added ‘dynamics’ menu to right-click in map plot.  Added ‘Edit Line’ menu to right-click in main stack window ‘Line Segments’.Bug Fixes      Fixed export to text.If there is an error during export. ‘Clear User’ then ‘Analyze User Map’ and try export again.        Replotting a run while existing run is linked will continue to correctly link        Linked windows +/- zoom now works when some windows have left control bar and some do not  20160126New Features  Opening a stack will now display a floating dialog while stack is loading (it is yellow)  Exposed interface to set defaults for intensity background candidates.We can now set # rows, # cols, row mult, col mult, and a boolean to include other side of dendrite.When you include candidates on the other side of the dendrite, you are doubling the # of candidated.Due to this increased analysis, spine/second is dropping down to ~8 spines/second  Added ‘segment ends’ search to return spines close to the end of each segmentNew Interface  Added ‘debug on error’ checkbox to the Intensity Tab. This turns ‘debug on error’ (global igor option) on/off to run intensity analysis for a map or a stack. You want to run intensity analysis with this OFF  added ‘export map’ to right-click of map list in main map manager panel  revamped search panel with two tabs: map and manual  reworked obj info window interface      - removed ‘analyze run’      - on ‘analyze’ we will now open ch1/ch2 if neccessary  control click on ‘Unload Stacks’ in main mapmanager panel to unload ALL stack across ALL open maps  added (density report, dynamics report) right-click to map in main map manager panel  added (scale, date/time) checkboxes to main map manager panel. This hides columns so you can see LONG ‘original names’General Improvements  Fixed user interface for clicking to set a manual position for intensity background      - clicking off the image does nothing      - if click results in roi going off image, we revert to last good background roi      - removed help text from main window and now display in igor command window  Rewrote ‘clear’ intensity analysis to be much faster.  Moved default plot window to left (was off screen to right for richard)  Rewrote ‘dynamics report’ to include 3d segment length and density. Previously lengths were calculated from 2d projections, now they are true 3d lengths. New columns are: {totalLen3d, goodLen3d, totalDen3d, goodDen3d}Bug Fixes  setting the segment pivot point will be correctly saved. Previous versions (not all of them) were not doing this correctly.  Fixed bug where the backbone roi was ‘looping around’ to previous backbone segment. This was happening for spines at the beginning of a segment (not at the end). Now, spines at both the beginning and end of a segment get the correct backbone ROI.  fixed plot panel (ch1, ch2, dyn) checkboxes, they now generate full stat lists including ‘u’ stats  [BUG] stat lists are using tp=0 to generate stats, if they are missing ‘u’, you will not get ‘u’ in stat list  fixed bug where right-click below segment list (in left control panel of stack window) would sometime give an errorKnown Bugs  ‘Export map’ has a bug if size of int analysis is different between stacks in a map. This happens if int analysis fails half way through and user ‘u’ stats are added to some but not other stacks. Solution is to clear and then re analyze intensity for the offending stacks. Be careful, when you clear, you lose your manual setting (individual spine background position, spine width, etc).20160119 Update (sent to users on 20160115 / 20160118)This is the first MapManager version of intensity analysisNew Features  Complete rewrite of intensity analysis  Depending on the size of your stacks, intensity analysis should do ~15 spines/sec for large stacks and ~50 spines/sec for smaller stack. Loading stacks is the rate limiting factor.  Spine roi is drawn using the longest spine length in each run  Added intensity bad. Can be set for each spine. Spines marked ‘intensity bad’ can be toggled in all plots.  Each spine has errors and warnings if intensity analysis had problems. Search for ‘errors and warnings’ to decide what to do with the errors. Most of the time you will set ‘Intensity Bad’  Intensity Analysis Errors occur when          spine roi is off image      backbone roi had to be shortened (near end of dendrite)      background roi not found because all candidates are off image        Intensity analysis should be run with ‘Procedure - Debug On Error’ off  Added ‘Save Map As…’ to save an entire map under a new name. Use Map Manager Panel - Utility - Save Map As…New Interface  Search - Errors &amp;amp; warnings  Search - V Spines. Will search spines that have spine head above/below the backbone line connection point  Search - ROI Bounds. Will search for spines that have background spine ROI near edge of image.Known bugs  [FIXED] Spine density in a map is using 2D projection of line  [checked and seems to work] RIght-click menu items with ‘tab’ might not work on windows. For example ‘Reset Zoom   [enter]’  [FIXED] changing a spine (e.g. ‘move’) does not set intensity dirty for other spines in run  [FIXED] editing spine dynamics (add/subtract/persist) needs to mark all effected spines as ‘intensity dirty’  After int analysis, if no background is found (error #99) it is not possible to have user set manual background20150731 Sent first version of Map Manager to Richard and Yong  This is a COMPLETE rewrite of original bSPine program  Did not hear back",
      "url": "/release-notes",
      "author": "",
      "category": "post",
      "date": "Apr 2016"
    }
    ,
  

    "gallery": {
      "title": "Gallery",
      "content"	 : "Gallery",
      "url": "/gallery",
      "author": "",
      "category": "workflow",
      "date": "Nov 2015"
    }
    ,
  

    "find-points-panel": {
      "title": "Find Points",
      "content"	 : "New in October, 2015.This documentation needs some work.The find points panel allows you to browse objects between two timepoints/sessions, will show you the best-guess for putative connections, and allow you to connect/disconnect objects across timepoints/sessions.To open the find points panel:  Right-click a spine in a map and selecting ‘Find Points’.  Right-click a session in the main Map Manager Panel and selecting ‘Find Points’.  Right-click a map in the main Map Manager Panel and selecting ‘Find Points’.Overview  The find points panel displays a list of all spines in the source timepoint (sIdx). In this example there are 21 spines in the source timepoint.  For each spines in the source timepoint, it shows if it is connected to the destination timepoint (dIdx). It will color the dIdx cell red if there is no connection.  Any remaining spines in the destination timepoint (spines not connected to the source timepoint) will be displayed at the bottom of the list. In this example there are 3 of these spines.  Each spine in the source timepoint will also have a best ‘Guess’ connection in the ‘Guess’ column. For spines, this is using your ‘Segment Pivot’ for the two segments listed in Find Points and will connect spines across timepoints/sessions that are within ‘Connect spines within this distance (um)’. See the Map Manager Options Panel to set this.Interface  From TP. Source timepoint/session (From TP)  To. Destination timepoint/session (To timepoint)  Object Type. Select the type of objects to display.  ShowBad. If checked, bad points will be included in the list. Bad points will always have their ‘Idx’ column in red.  Segment ID. Limit the list to one segment ID.  All Segments. Generate the list for all segments. If you are connecting spines, leave this off (unchecked).  Refresh. Will refresh the Find Points list. [as of Nov 2015, there may be some edits to the map that do not refresh the list automatically.]Column NamesClicking on any column name will sort the list by the values in that column. Column names starting with ‘s’ are for the source timepoint (from TP), column names starting with ‘d’ are for the destination timepoint (to TP).  Idx - The row index in the table (no relation to object index).  sIdx - Source object stack db index.  sz - Source object z-depth  sParent - Source object parent segment.  spDist - Source object distance from pivot.  Guess - Automatically generated best guess for connection. This uses each objects distance from pivot (spDist and dpDist) and returns objects within X um, where X is specified by ‘Connect spines within this distance (um)’.  dIdx - Destination object stack db index.  dz - Destination object z-depth  dpDist - Destination object distance from pivot.  Dist - When two points are connected (both sIdx and dIdx are filled in), this is the distance between the two points measured as the distance between their two pivot points (spDist and dpDist).Interaction  Bring up a map run by right-clicking a row and selecting ‘Plot Run’.  Select an object in the list and it will be propagated to all run and map plots.  Use the keyboard to scroll through the list. The selected point will flash in all open windows.  Use left/right arrows to flash the selected object again.Using the keyboard to connect and disconnect objectsFor a selected row  ‘shift + right-arrow’ to commit the ‘Guess’ to the destination (dIdx). This will connect the source and destination objects together, making them persistent.  ‘del’ key to remove the connection. This will remove persistence between the source and destination objects.  ‘ctrl + p’ to set the selected point at the global pivot. This is not used for spines.TipsWhen used with a spine run, find points is a reliable way to check the connections between all objects in two timepoints.All objects in the source timepoint are in the list, followed by any remaining objects in destination timepoint that were not connected to an object in the source timepoints.By sorting the list with the source distance from pivot (spDist), you can step through all spines in the source timepoint sequentially along the dendritic segment.By sorting the list with the destination distance from pivot (dpDist), you get a sequential list of all objects in the destination timepoint.Example usage of find points panel. Here, we have a run of sessions 1/2/3 (top row). We have positioned the Find Points panel below the stack for session 2. By selecting rows (spines) in Find Points we can browse all spines in session 2, visualize their connections to session 3, and finally edit their connections to session 3 (using the keyboard in Find Points Panel).",
      "url": "/find-points-panel",
      "author": "",
      "category": "interface",
      "date": "Aug 2015"
    }
    ,
  

    "getting-started": {
      "title": "Getting started",
      "content"	 : "Installing Igor Pro  Igor Pro is a cross platform program that runs on both Windows and Mac OS X.  You need to purchase an Igor Pro license from Wavemetrics, download Igor Pro and install it.  To try out Igor Pro, download and install a fully functional but time limited demo version.Installing Map Manager  Once Igor Pro is installed, there is no formal installation of Map Manager  Get the source code from Bob.  The source code will be in a folder named ‘MapManager_date’ where ‘date’ is the date the software was created. The folder will be something like ‘MapManager_20151117’.  Run the software by double-clicking MapManager.ipf from within the source code folder.  To fit lines in FIJI you will have to specify a hard-drive path to FIJI and install a plugin in FIJI. Please see fitting segments in fiji.Opening/Running Map Manager  Open MapManager.ipf into Igor Pro (just double click the MapManager.ipf file).  Once in Igor Pro, click in the command window to compile Map Manager and activate the main menus. The command window is in the lower left of your screen and has the window title ‘Untitled’.  To score a single timepoint stack, select the main menu ‘MapManager - Stack Browser’ to open the Stack Browser panel. See Annotating a stack for more information.  To score a timeseries of stacks (a map), select the main menu ‘MapManager - Map Manager Panel’ to open the main Map Manager panel. See Making A Map for more information.Closing/Quiting Map Manager  Quit Igor Pro by selecting the main menu ‘Igor Pro - Quit Igor Pro’.  When you quit Igor Pro, you will always be prompted with the following dialog.  Always answer No. All Map Manager analysis is saved using the ‘Save’ buttons from within the Map Manager interface.Map Manager Options  Global options are set in the Options Panel.  There is one set of options that will be reloaded the next time Map Manager is run.  Save the current options with the ‘Save’ button in the Options panel.  Options can also be saved and then loaded from a user file. Use ‘Save As…’ to save options into a user file.",
      "url": "/getting-started",
      "author": "",
      "category": "workflow",
      "date": "Jul 2015"
    }
    ,
  

    "faq": {
      "title": "FAQ",
      "content"	 : "LimitationsImporting      Map Manager is designed to import single color channel 3D .tif files. For other file types (e.g. .lsm) or for other cases like 2 color channel .tif files we have some FIJI plugins that should get you started.        To import 2 color channel .tif files, the files need to be split into 2 separate .tif files (with _ch1 and _ch2 in their names). See bAlignBatch, a FIJI plugin that does this for you.        Does not handle .tif stacks with multiple repeats per images plane. Map Manager will import these stacks fine but does not know about the repeats. You want to strip out repeats before importing into Map Manager.  File name rules  Map Manager will have problems if any of the following strings are in your source file names:  _ch1  _ch2  _zsVisualization  Will only display one channel at a time. For most purposes this is fine. You can quickly switch between the color channels and run intensity analysis on both channels independently. To visualize a merged or composite image, use FIJI.",
      "url": "/faq",
      "author": "",
      "category": "post",
      "date": "Jul 2015"
    }
    ,
  

    "reports": {
      "title": "Reports",
      "content"	 : "All reports will open a table of text that can be copy/pasted into another program for further analysis.There are three types of reports: stack reports, segment reports, and map reports.Stack ReportsReports can be generated directly from each stack window.Tip. Use keyboard &#39;[&#39; in any stack window to open and close the left stack db panel.Line Segments  Keyboard ‘e’ In the ‘Line Segments’ section of the main stack db panel to display a summary of each segment.  Keyboard ‘E’ In the ‘Line Segments’ section of the main stack db panel to display the entire line (all 3D points)Points (stack db)  Keyboard ‘e’ In the ‘Points’ section of the main stack db panel to display the stack db as a table.  Keyboard ‘i’ In the ‘Points’ section of the main stack db panel to display intensity analysis as a table.Segment ReportsSegment ReportA segment report display statistics for each segment in a stack. It displays the length of the segment, the number and density of spines, the x/y/z position of the segment, and the number of each user spine type (e.g. mushroom, stubby, etc.). A segment report can be generated for individual stacks or a map.To generate a segment report for each segment in a stack  In a stack window, keyboard ‘o’ for output report.  In the Stack Browser, select a stack in the list, keyboard ‘o’ for output report.  In the Stack Browser, right click a stack in the list of stacks and select ‘Segment Report’.  In the Stack Browser, right click a folder in the list folders (on the left) and select ‘Segment Report (All Stack)’.The columns in a segment report are as follows            Name      Meaning                  numSpines      Total number of spines = goodSpines + badSpines              goodSpines      Number of good spines.              badSpines      Number of bad spines.              totalLen      (2D) Total segment length (um)              goodLen      (2D) Segment length (um) from most distal good spines.              totalDen      (2D) Total density of all spines = numSpines / totalLen              goodDen      (2D) Density of good spines = goodSpines / goodLen              totalLen3d      (3D)              goodLen3d      (3D)              totalDen3d      (3D)              goodDen3d      (3D)              zMin                     zMax                     zMean                     zMedian                     zAngle                     xyAngle                     tort                     xMin                     xMax                     xMean                     xMedian                     yMin                     yMax                     yMean                     yMedian                     nUnknown      Number of spines with userType ‘Unknown’              nMushroom      Number of spines with userType ‘Mushroom’              nFilapodia      Number of spines with userType ‘Filapodia’              nLong      Number of spines with userType ‘Long’              nStubby      Number of spines with userType ‘Stubby’      Map ReportsThere are two types of map reports, Dynamics and Survival. Each report begins with a header that gives information about each session in the report            Name      Meaning                  Idx      Session Index              Map      Name of the map              sessCond      Session Condition              mapSegment      Map specific segment index (different from stackSegment)              Stack      Name of the stack (used internally)              originalFile      Original file name of the stack              stackSegment      Stack specific segment index (different from mapSegment)              date      The date the stack was acquired              time      The time the stack was acquired              seconds      The seconds the stack was acquired (from 12:00 AM on Jan 1, 1904)      Dynamics ReportA dynamics report is used for a map. For each session in a map, it will calculate the length of each segment (um), the number of added and subtracted spines, the density of added and subtracted spines, etc. etc.In any map plot, right-click and select ‘Dynamics Report’. If the map plot is displaying ‘All Segment’, a table for each segment will be opened. Otherwise, one table for the current ‘Map Segment ID’ will be opened.The report is broken into different sections.Information about the segment tracing            Name      Meaning                  totalLen2d      Total 2D length of tracing (um)              goodLen2d      2D length of tracing between most distal ‘good’ objects (um)              smoothPoints      Boxcar smoothing for tracing z (0 means no smoothing)              totalLen3d      The smoothed total 3D length of tracing (um)              goodLen3d      The smoothed 3D length of tracing between most distal ‘good’ object (um)      Information about all object (ignoring user type)            Name      Meaning                  density      density = nTotal / goodLen3d              nTotal      Total number of spines (is same as nGood + nBad)              nGood      Total number of good spines              nBad      Total number of bad spines                                    nAdd      Number of added spines.              nSub      Number of subtracted spines (at the current session)              nSub2      Number of subtracted spines (from the previous session)                                    pAdd      Percent added = nAdd / nGood from previous session * 100              pSub      Percent subtracted = nSub / nGood from previous session * 100              pSub2                                           dAdd      Density added = nAdd / goodLen3d from previous session              dSub      Density subtracted = nSub / goodLen3d from previous session              dSub2             Information about user type 0            Name      Meaning                  density_ut0      Density of user type 0 = nTotal_ut0 / googLen3d              nTotal_ut0      Total number of user type 0              nGood_ut0      Total number of good user type 0              nBad_ut0      Total number of bad user type 0                                    nAdd_ut0      Number of added user type 0              nSub_ut0      Number of subtracted user type 0              nSub2_ut0                                           pAdd_ut0      Percent of added user type 0 = nAdd_ut0 / nGood_ut0 from previous session *100              pSub_ut0      Percent of subtracted user type 0 = nSub_ut2 / nGood_ut0 from previous session              pSub2_ut0                                           dAdd_ut0      Density of added user type 0 = nAdd_ut0 / goodLen3d from previous session              dSub_ut0      Density of subtracted user type 0 = nSub_ut0 / goodLen3d from previous session              dSub2_ut0             Information about user type 1, 2, 3, … 5Other sections will be appended to the report to give information about ‘user type 1’, ‘user type 2’, ‘user type 3’, …, ‘user type 5’Survival ReportA survival report calculates the number of objects remaining from an initial ‘seed’ session. Like a Dynamics report, it breaks down objects into different sections including all objects, followed by user type 0, followed by user type 1, etc. etc.Information about all object (ignoring user type)            Name      Meaning                  surv_all_s0      For each session, the number of surviving objects relative to seed session 0              psurv_all_s0      For each session, the fraction of surviving objects relative to seed session 0                     Note: This can continue with different seed sessions, for example, surv_all_s2 would give the number of surviving objects relative to seed session 2      Information about user type 0            Name      Meaning                  surv_type0_s0      For each session, the number of surviving user type 0 objects relative to seed session 0              psurv_type0_s0      For each session, the fraction of surviving user type 0 objects relative to seed session 0                     Note: This can continue with different seed sessions, for example, surv_type0_s2 would give the number of surviving user type 0 objects relative to seed session 2      Information about user type 1            Name      Meaning                  surv_type1_s0      For each session, the number of surviving user type 1 objects relative to seed session 0              psurv_type1_s0      For each session, the fraction of surviving user type 1 objects relative to seed session 0      Information about user type 2, 3, 4, 5Other sections will be appended to the report to give information about ‘user type 2’, ‘user type 3’, ‘user type 4’ and ‘user type 5’",
      "url": "/reports",
      "author": "",
      "category": "analysis",
      "date": "Jul 2015"
    }
    ,
  

    "intensity": {
      "title": "Intensity",
      "content"	 : "Algorithm and StrategyAll intensity analysis is performed by calculating statistics (Sum, Mean, standard-deviation, N) from the intensity values of pixels within a number of 3D regions-of-interest (ROI). Further analysis is then derived by performing algebra between these ROIs.Spine ROIA polygon surrounding a spine. Starts as a rectangle and then overlapping regions of the backbone/dendrite ROI is subtracted. Any remaining disjoint regions (on other side of backbone/dendrite) are then removed. The spine ROI is centered in the same image plane as the spine head. Three parameters specify spine ROI: width, extend head, and extend tail.Backbone/Dendrite ROIA polygon centered on the spine connection point and extending a fixed distance (um) up and down the backbone/dendrite line. The backbone/dendrite ROI is centered in the same image plane as the spine connection point. The distance to extend up and down the backbone/dendrite line is set with ‘+/- Segment (um)’Background ROIBoth the spine roi and the backbone/dendrite roi get their own background ROIs. The spine background ROI is the same size/shape as the spine ROI. Likewise, the backbone/dendrite background ROI is the same size/shape as the backbone/dendrite ROI. The position of these background ROIs is the position that gives the minimal intensity from a number of candidate positions (a 3x3 grid emanating from the spine head). All background ROIs (both spine and backbone/dendrite) are centered in the same image plane as the spine head.Please note, parameters controlling the grid of candidate background positions is not exposed to the user.Running Intensity AnalysisFor a stack, intensity analysis is run from a stack window using the ‘Analyze Intensity’ button. This button is in the left panel, open the left panel for a stack with keyboard ‘[’.For a map, intensity analysis is run from the main map manager panel using the ‘Intensity’ tab.ParametersGlobal intensity analysis parameters are set in the stack db options panel. These parameters are used for every spine in a map.Once intensity analysis has been run, the parameters of individual spines can be set using the ‘Object Info’ panel in a stack. Open the Object Info window in a stack with keyboard ‘i’.  Width (um). Width of spine ROI centered on the spine line.  Extend head (um). Distance to extend the spine ROI beyond its spine head.  Extend tail (um). Distance to extend the spine ROI beyond it connection point with the backbone/dendrite..  +/- Slices. The statistics (Sum, Mean, SD, N) of each spine, backbone, and background ROI is calculated after expanding the ROI up and down in Z-dimension.      +/- Segment (um). The distance (um) to extend the backbone/dendrite ROI up and down the backbone/dendrite line.    Background - Both Sides. Only available as a global options.  Background Rows. Only available as a global options.  Background Row Mult. Only available as a global options.  Background Columns. Only available as a global options.      Background Column Mult. Only available as a global options.    Scale Radius (um). Only available for individual spines using the Object Info Panel. When intensity analysis is run (for a map), each spine is assigned a radius (um) following the radius of the segment it is attached to. Once intensity analysis has been run, this radius can be set for individual spines in the Object Info panel.Intensity Analysis OutputThe following statistics are calculated and displayed in the X/Y statistics lists in the Plot Panel.A table of these statistics can be displayed for each stack in the stack db panel. To do this: (1) in a stack window, open the stack db panel with keyboard ‘[’, (2) click on the point list and (3) use keyboard ‘i’ for intensity.Please note, ‘u’ is for user. User stats are simple algebra on the core intensity analysis.Spine ROIsSum:spine sumsMean:spine meansSD:spine standard deviationsN:# pixels in spine roiSpine Background ROIsbSum:spine background sumsbMean:spine background meansbSD:spine background standard deviationsbN:# pixels in spine background roiBackbone/Dendrite ROIdSum:dendrite sumdMean:dendrite meandSD:dendrite standard deviationdN:# pixels in dendrite roiBackbone/Dendrite Background ROIdbSum:dendrite background sumdbMean:dendrite background meandbSD:dendrite background standard deviationdbN:# pixels in dendrite background roiBackground subtracted ROIsubssSum:background subtracted spine sumubssMean:background subtracted spine meanubsdSum:background subtracted dendrite sumubsdMean:background subtracted dendrite meanCross channel statsutssmoss:this spine sum minus other spine sum.                This can be read as &#39;(t)his (s)pine (s)um (m)inus (o)ther (s)pine sum&#39;utsmmosm:this spine mean minus other spine meanutssdoss:this spine sum divided by other spine sumutsmdosm:this spine mean divided by other spine meanutssmods:this spine sum minus other dendrite sumutsmmodm:this spine mean minus other dendrite meanutssdods:this spine sum divided by other dendrite sumutsmdodm:this spine mean divided by other dendrite meanMoving the background ROIClicking on the spine backgrond ROI will enable an edit mode where the user can specify the background position. This edit mode also shows the candidate background positions.  Mouse-Click to set a new position.  ‘Enter’ to accept new position.  ‘r’ to reset spine position. A new position will automatically be chosen next time spine is analyzed.  ‘esc’ to cancel moveErrors and WarningsWhen the intensity analysis has a problem analyzing a spine, errors and warnings will be set for that spine. Most errors are due to an ROI going off the image or in problems with drawing a valid backbone ROI (near the end of a segment).There are two ways to browse errors and warning:  Use the ‘Errors &amp;amp; Warnings’ button in the search panel.  Examine the ‘Errors’ column in a stacks point list panelBe careful of spines that are very close to each other. As spine density increases, the spine ROI of a spine will start to overlap with the spine ROI of its neighbors.There are two ways to check for nearby (high density spines). These are slightly different measurements, the first is examining closeness of the spine head as a 3D point, the second is examining closeness by looking at the connection point along a segment.  Use the ‘Closeness’ button in the search panel too find spine heads that are close to other spine heads.  Use the ‘nnDist’ column in the point list panel to find spines that are connected to a segment close to other spines connection points.Errors and Warnings areError # 3 x spine ROI beyond imageError # 3.5 y spine ROI beyond imageError # 6 reducing spine with ImageSeedFillError # 9 extending backbone errorWarning # 5.1 prev cPntIntensity DirtyA spines intensity analysis becomes ‘dirty’ and needs to be re-run whenever the geometry of a spine changes or the geometry of its connected spines change.Intensity analysis can be run on just ‘dirty’ spines using the ‘Only Dirty’ checkbox in the Intensity Tab of the main map manager panel. Dirty spines can be browsed using ‘Int Dirty’ in the main search panel.A spines intensity analysis becomes dirty when:  A spine is moved  A spine is reconnected to the backbone  Its analysis parameters are changed (width, extend head, etc.)  Any of the other spines connected to it are changed  Its dynamics are changed (addition, subtraction, persistent)",
      "url": "/intensity",
      "author": "",
      "category": "analysis",
      "date": "Jul 2015"
    }
    ,
  

    "hdd-paths": {
      "title": "Hard Drive Paths",
      "content"	 : "Open the Hard Drives Path Panel using the main menu ‘MapManager - Hard Drive Paths’.The values specified in this panel will be saved when stack db options are saved in the stack db options panel.Map Manager MapsLocation to load and save maps. This defaults to ‘My Documents’ on Windows and ‘Documents’ on OS X.Session DBAdvanced:Location of your session DB folder if using the mp285 CanvasFiji ApplicationLocation of Fiji application. Used when fitting line segments in Fiji.UserLoad a user file to specify program defults. See stack db options panel and user files.",
      "url": "/hdd-paths",
      "author": "",
      "category": "interface",
      "date": "Jul 2015"
    }
    ,
  

    "file-format": {
      "title": "File format",
      "content"	 : "Map Manager 3 can save two different types of files  Text - Default  HDF5 - ExperimentalTextPythonMap Manager saves files as plain text. Thus, it is relatively easy to extend the function of Map Manager by writing Python (or Matlab) code to load, parse, and analyze these text files. This is a very rapid and effective route to extending the functions of Map Manager with new analysis particular to your own data and ideas. Please have a look at an example iPython notebook. If you are interested in more information, please email Robert Cudmore.It is suggested that you use the Anaconda python distribution as it comes with many useful packages pre-installed. Download Anaconda it here.HDF5HDF5 is an open source cross platform binary file format. It can be read from Matlab, Python, Igor Pro and from a command line.As of Sept 2015, Map Manager is not saving files in the HDF5 format. If you are interested in turning on this feature, please email Robert Cudmore.PythonIt is suggested that you use the Anaconda python distribution as it comes with many useful packages pre-installed including hdf5 for python. Download Anaconda it here.import h5pyimport numpy as np# open h5 filef = h5py.File(&#39;a5n.hdf5&#39;, &#39;r&#39;)# get list of top level groups (these are mm3 maps)for g in f:    print g    # assign myMap to top level mapfor myMap in f: print myMap# get list of objects within a map# these objects include {objmap, stackdb, int, line, linedb}# keys() returns a list [0], [1], [2], ...for key in f[myMap].keys():    print key    # datasets within group &#39;a104&#39;for ds in f[myMap].values():    print ds    # get an objectobjectIndex = 4f[myMap].values()[objectIndex][:][:]# get the value of a spine from an objectobjectIndex = 4spineIndex = 10f[myMap].values()[objectIndex][spineIndex]# attributes of a datasetobjectIndex= 4for a in f[myMap].values()[objectIndex].attrs:    print a# this is trying to pull form an intensity object# for some reaosn i can&#39;t transpose the rowsf[myMap].values()[9].values()[0][0][:]# spine 0, spineLen2 (spineLen2 is in column 1)f[myMap].values()[9].values()[0][0][1]# spine 1, spineLen2f[myMap].values()[9].values()[0][1][1]In [64]: f[myMap].values()9.values()Out[64]: [&amp;lt;HDF5 dataset “a5n_s0_Int1”: shape (385, 41), type “&amp;lt;f4”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s0_Int2”: shape (385, 41), type “&amp;lt;f4”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s0_db2”: shape (385, 44), type “|O8”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s0_l”: shape (3903, 19), type “&amp;lt;f4”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s1_Int1”: shape (378, 41), type “&amp;lt;f4”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s1_Int2”: shape (378, 41), type “&amp;lt;f4”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s1_db2”: shape (378, 44), type “|O8”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s1_l”: shape (3871, 19), type “&amp;lt;f4”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s2_Int1”: shape (369, 41), type “&amp;lt;f4”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s2_Int2”: shape (369, 41), type “&amp;lt;f4”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s2_db2”: shape (369, 44), type “|O8”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s2_l”: shape (3742, 19), type “&amp;lt;f4”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s3_Int1”: shape (364, 41), type “&amp;lt;f4”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s3_Int2”: shape (364, 41), type “&amp;lt;f4”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s3_db2”: shape (364, 44), type “|O8”&amp;gt;, &amp;lt;HDF5 dataset “a5n_s3_l”: shape (3837, 19), type “&amp;lt;f4”&amp;gt;]i got 385 from shape (how do i do this with code?)In [82]: for a in range(385):    print f[myMap].values()9.values()[0]athis is workingmya=np.arange(385, dtype=np.float32)for a in range(385):    mya[a] = f[myMap].values()[9].values()[0][a][1]import matplotlib.pyplot as pltplt.plot(mya, &#39;ro&#39;)plt.xlabel(&#39;Spine Index&#39;)plt.ylabel(&#39;Spine Length 2D (um)&#39;)plt.show()Use the Python hdf5ManagerFor now this is not very useful for my hdf5 files but is a proof of concept.      Download hdf5 manager here.        Run it    python h5_manager.py        Getting h5_manager to work     # install pyqt4 in anaconda conda install pyqt # update anaconda (h5_manager was failing to import matplotlib) conda update --prefix /Users/cudmore/anaconda anaconda # run h5_manager python h5_manager.py       ",
      "url": "/file-format",
      "author": "",
      "category": "post",
      "date": "May 2015"
    }
    ,
  

    "fitting-segments-in-fiji": {
      "title": "Fitting segments in Fiji",
      "content"	 : "Line segments are fit in FIJI using Map Manager specified control points.The version of Fiji is criticalYou are required to use ImageJ 1.47v, this corresponds to the &#39;Fiji Life-Line version, 2013 July 15&#39; on the main FIJI download page.(1) Download ‘Fiji Life-Line version, 2013 July 15’  Mac: http://fiji.sc/downloads/Life-Line/fiji-macosx-20130715.dmg  Windows (64bit): http://fiji.sc/downloads/Life-Line/fiji-win64-20130715.zip  Windows (32-bit): http://fiji.sc/downloads/Life-Line/fiji-win32-20130715.zipOnce downloaded and installed/uncompressed, drag and drop the Bob_Neurite_Tracer_v3.java plugin to the ‘plugins’ folder inside the newly created Fiji.app application folder.Important. Do NOT put Fiji.app into any path with spaces. Do not put Fiji.app in &#39;Program Files&#39;.If you already have a newer version of Fiji installed, this is fine as two versions of Fiji can be installed. They just have to be in different hard-drive folders.The reason we use this older version of Fiji is that newer versions of Fiji have undocumented changes to the backend JAVA programming interface. Until this is resolved, we will continue to use the older version of Fiji.(2) Installing the ‘Bob_Neurite_Tracer_v3.java’ pluginWhen you fit a line in Fiji from within Map Manager, you are using the Fiji plugin Bob_Neurite_Tracer_v3.javaTo install this plugin  Download Bob_Neurite_Tracer_v3.java or from our Github repository.  Copy Bob_Neurite_Tracer_v3.java into your Fiji ‘plugins’ folder.(3) Configuring Map Manager to fit a line In FijiYou need to specify the location of your Fiji program from within Map Manager. This is most easily done using the Hard Drive Paths panel.  Open the HDD Paths panel using the main menu ‘MapManager - Hard Drive Paths’.  In the Map Manager HD Paths panel, specify the path to your Fiji Application with the corresponding Set button.  In the main Options Panel, save the global options with the Save button. The next time Map Manager is run, it will remember and use this Fiji path.TroubleshootingIf line fits do not work from within Map Manager, please check the following  You are using the ‘Fiji Life-Line version, 2013 July 15’.  Your Fiji.app folder can not be in a folder with any spaces or special characters in its path (this includes ‘Program Files’).  You have downloaded and install the ‘Bob_Neurite_Tracer_v3.java’  You have specified your Fiji path within Map Manager using ‘MapManager - Hard Drive Paths’.The location of the Fiji program can also be specified in a Map Manager User File. The user file needs to contain a line like this…# Specify the location of your Fiji executable.# Please use &#39;Fiji Life-Line version, 2013 July 15&#39;.# macroot:stackdb2:options:gFijiPath=&quot;/Users/cudmore/Fiji.app/Contents/MacOS/Imagej-macosx&quot;# windows# root:stackdb2:options:gFijiPath=&quot;C:Userscudmore.linden-image2DesktopFiji.appfiji-win64.exe&quot;Make sure the actual Fiji executable exists. Don’t assume the name of Fiji is ‘fiji-win64.exe’, this name changes from version to version of Fiji. If there is an error in this path, there WILL be an error when fitting lines in Map Manager.",
      "url": "/fitting-segments-in-fiji",
      "author": "",
      "category": "imagingcore",
      "date": "Apr 2015"
    }
    ,
  

    "user-files": {
      "title": "User files",
      "content"	 : "User files have been completely revamped. Global options can now be easily saved and loaded using the &#39;Stack DB Options Panel&#39;.See Stack DB Options PanelUser files are text files where global options are specified and then loaded and applied within Map Manager. This is useful when you have mutiple users within one Map Manager installation.User files are loaded using the main menu ‘mm3 -&amp;gt; Load User’ or in the Hard Drive Paths panel.Important. When you load a user file, anything specified in the file will override existing options.RulesMake sure there is NO space surround the ‘=’ sign.  GOOD: root:line2:options:gDefaultSegmentRadius=0.35  BAD: root:line2:options:gDefaultSegmentRadius = 0.35Make sure your text editor is using simple double quotes  GOOD: root:stackdb2:options:gFijiPath=”C:Userscudmore.linden-image2DesktopFiji.appfiji-win64.exe”  BAD: root:stackdb2:options:gFijiPath=“C:Userscudmore.linden-image2DesktopFiji.appfiji-win64.exe”Some useful optionsSpecify default user folder to load/save maps:root:MapManager3:gMapDriveDir=&quot;vasculature:Users:cudmore:Documents:MapManager3:&quot;The default radius of new segments (um)root:line2:options:gDefaultSegmentRadius=0.3The maximum distance along a segment when automatically connecting objects in a map (um)Objects will only be connected if their position on the segment line is less than this.root:ObjMap:options:gMaxPDistConnDist=3The number of segment points to search when auto-connecting a spineroot:StackDB2:options:gLinePointsToSearch=6Here is an example user file…# macroot:stackdb2:options:gFijiPath=&quot;/Applications/Fiji.app/Contents/MacOS/Imagej-macosx&quot;# windows# root:stackdb2:options:gFijiPath=&quot;C:Userscudmore.linden-image2DesktopFiji.appfiji-win64.exe&quot;# default point size for stack db objectsroot:stackdb2:options:gPointSize=3# default size for user selectionsroot:StackDB2:options:gPointSelSize=5# default stack window widthroot:bStack:gStackWindowWidth1=1000# default segment radiusroot:line2:options:gDefaultSegmentRadius=0.35# set the number of image planes an object is visible# controls mask as you scroll up/down with mouse wheelroot:bStack:gMaskWindow=2# turn on real-time intnesity analysisroot:stackdb2:options:gAnalyzeIntOnNewSpines = 0root:stackdb2:options:gShowSpineIntensity = 0root:line2:options:gFIlterSWC_BoxWidth = 5root:line2:options:gFIlterRadius_BoxWidth = 5root:bNV:gUserName=&quot;cudmore&quot;# stack browserroot:bStack:gRootHDD=&quot;&quot;#root:bStack:gRootHDD=&quot;fourt:jhu:data:&quot;#root:bStack:gAnalysisPath=&quot;Vasculature:Users:cudmore:jhu:vascularAnalysis:&quot;# set defaults in ‘Process Image’# ch1 defaultsroot:bProcess:gAutoContrast=1root:bProcess:gMinContrast=0root:bProcess:gMaxContrast=200root:bProcess:gColorTable=&quot;Green&quot;# ch2 defaultroot:bProcess:gAutoContrastCh2=1root:bProcess:gMinContrastCh2=0root:bProcess:gMaxContrastCh2=200root:bProcess:gColorTable2=&quot;Grays&quot;#root:bStack:gDefaultChannel=1root:ObjMap:options:gDefaultPlusMinusRun=1root:ObjMap:options:gDefaultRunWindowWidth=400root:ObjMap:options:gDefaultZoomWidth=20root:ObjMap:options:gDefaultZoomHeight=20# only allow auto spine connections &amp;lt; this numberroot:ObjMap:options:gMaxPDistConnDist=3# default segment radius (um)root:line2:options:gDefaultSegmentRadius=0.3# line points to search when connecting spine/boutonroot:StackDB2:options:gLinePointsToSearch=6# single stack window parametersroot:bStack:gStackWindowWidth1=800root:bStack:gStackWindowWidth2=767.5root:bStack:stackScaleBar=5#“”",
      "url": "/user-files",
      "author": "",
      "category": "post",
      "date": "Apr 2015"
    }
    ,
  

    "stackdb-plot": {
      "title": "Stack DB plot",
      "content"	 : "A stack db plot provides an interface to edit and visualize a stack db for a single stack.All stack db plots are interactive. Selecting an object will propagate this selection to other stack and map plots.Toggle the stack db interface (the left control panel) in any stack using keyboard ‘[’.For more information on creating and editing 3D points and lines, see annotating a stack",
      "url": "/stackdb-plot",
      "author": "",
      "category": "imagingcore",
      "date": "Apr 2015"
    }
    ,
  

    "stackdb-options-panel": {
      "title": "Options",
      "content"	 : "The Map Manager Options panel provides global options to control the behavior of Map Manager. Options can be saved and then loaded using the User section. Values shown in red will effect your analysis.To open the options panel  Select ‘MapManager - Map Manager Options’ in the main menu.  ‘Options’ button in the left control panel of any stack.  ‘Options’ button in main Map Manager Panel.  ‘Options’ button in the Map Manager Buttons panel.The panel is very tall, scroll the panel up/down with the mouse wheel.UserInterface to load and save User Files.Load. Load a user file.HD. Show the ‘User’ folder on hard-disk.Save. Save the current options to the current user file. To reload this user file, use the ‘Load’ button.Load Factory Defaults.Save As… Save the current setting as a new user file.Stack DisplayOptions that control the display of the stack db in a stack window. Each time you change an option (e.g. ‘Points’) you need to press ‘Apply To Top Stack Window’ for the changes to take effect. Or, ‘Refresh’ the stack window with ‘r’.Points. Toggle stack db objects.Spine Line. Toggle the line connecting the spine head to the segment radius.Point mask. Turn point masking on/off. By default, stack db objects are shown and not shown (they are masked) based on the image plane you are viewing.Use segment color for all points. xxxLine. Toggle the segment backbone line and radii lines.Radii. xxxLine Mask. xxxTag Font Size. In a stack window, the tags are the stack db point number. In a map, the tags are the run number of the point.Scale Bar. Displayed in the bottom right of all stack windows. Cycle through stack window display options with keyboard shift+cDisplay Control Points xxxControl Point Help Use the ‘On’ and ‘Off’ buttons for some additional visual cues about your segment line fits. The end of the line fit is shown in red. This is useful when making the same segment across timepoints in a map. It helps you fit each segment in the same direction.Stack DBWarn On New ObjectsWarn On Delete ObjectsNew Objects On Mouse Click (no shift)Allow New Objects When Viewing Sliding Z-ProjectionStack Window Size Two default stack window sizes (screen pixels). Capture the size of an open Stack window with ‘C’ button.Mask Points +/- Slices The number of slices above and below each point to show the point in stack windows.Flash TicksScanImage, 1x zoom, 1024x1024 pixels (um/pixel) The x/y voxel size in um/voxel for importing ScanImage files.Line points to search when connecting spine/boutonDefault Segment Radius (um)Left/Right arrows will scroll through line (otherwise pan)Show Pixel Intensity (display in history) Prints the pixel intensity and x/y coordinates as mouse is moved over a stack window image.Grid Spacing (um) Display a grid on the images in a stack window. For the grid to display, stack window must be showing x/y axis. Use ‘shift+c’ to cycle through different stack window candy. Or set the default using ‘Default Stack Candy’ popup.New Object (Shift+Click) The default object to make on shift+click.Default plot objectDefault Stack CandyObject MapDefault Run +/-. Set the number of sessions to display when selecting right-click menu ‘Plot Run +- n’.Check map before save. xxxRun Window Width (pixels). The size of each window in a spine run.Default Zoom Width/Height (um). When snapping to a spine, the default zoom. The width/height of the image zoom in um.Connect points within this distance (um). When auto connecting points in a map and generating a Guess in Find points.Connect spines within this distance (um). When auto connecting spines in a map and generating a Guess in Find points. This is the distance from the segment pivot points along a dendritic segment (um). You can see this distance (pDist) in the Point Info panel of a stack.Always show stack DB indices (tags). xxxFixed posiiton for each run window. xxxLock segment selection in run plot. xxxShift + left/right to go to prev/next timepoint. xxxAuto plot object map on load. xxxIntensity AnalysisTurn intensity analysis on/off with the ‘Intensity Analysis’ checkbox. Be sure to refresh any open stack windows.Width (um)+/- SlicesExtend Head (um)Extend Tail (um)+/- Segment (um)DebugDebug On ErrorImporting Segments From FIJIDefault Segment Radius (um)Box Filter Line (points)Box Filter Radius (points)Convert To 8-bit. Will convert to 8-bit (in Fiji). This makes line fit much faster.Close Fiji When DoneMiscellaneousA table to set how stack db points are displayed. Use the disclusure triangle in the upper-right of the options window to show the table.Right-click on ‘marker’ or ‘color’ to set. Double-click on ‘size’ to set.Stack Browser OptionsAdditional option are available in the Stack Browser Options panel.Open the Stack Browser Options panel using the main menu ‘MapManager - Stack Browser Options’",
      "url": "/stackdb-options-panel",
      "author": "",
      "category": "interface",
      "date": "Apr 2015"
    }
    ,
  

    "stack-plot": {
      "title": "Stack plot",
      "content"	 : "A stack plot shows a value/statistic for all 3D annotations in a single stack. Each point is a value/statistic for one 3D annotation in the stack.All stack plots are interactive. Selecting an annotation will propagate this selection to other stack and map plots.Make stack plots from the main plot panel.Example stack plot of position of spines along a dendritic segment. Spines can be on different sides of the dendrite and are shown here on the left or right of the dendritic segment.Example stack plot of spine length in μm (sLen2d) versus spine index. Spine index is the order spines were created in 1, 2, 3, etc. etc.",
      "url": "/stack-plot",
      "author": "",
      "category": "plot",
      "date": "Apr 2015"
    }
    ,
  

    "search-panel": {
      "title": "Search panel",
      "content"	 : "The search panel allows a stack or map to be searched for stack db objects.Interacting with resultsPerforming a search will create a list of object matching the search criteria. Selecting an entry in the search results will select that object in any open stack and map plots. Likewise, selecting an object in a stack or map plot will select the object in the search list (if it is in the list).  Single-click or scroll with keyboard will select the object in existing stack windows (it will not open or pan/zoom the existing stack windows).  Double-click to open and select the object in its corresponding stack.  Option-click to zoom the object in an already open stack plot.  Right-click to open a run plot.Types of searchesFirst select the type of object with ‘Object Type’ popup. Start by selecting ‘Spine’.Objects  All. All objects of ‘Object Type’  Bad. Objects marked bad  Errors and Warning. Objects with Intensity Analysis errors and warnings. USe the Error and Warning checkboxes in the upper right of the panel to toggle these columns on and off.  Int Dirty. Returns spines with dirty intensity analysis. Spines with dirty intensity analysis can be analyzed in the main map manager panel, intensity tab.  Int User.  Int Bad.  Notes. Objects with notes matching the search criteria. Use ‘*’ as a wildcard. Use ‘*’ to return all objects with notes, use ‘thistext*’ to search for notes starting with ‘thistext’.  Closeness. Returns object that are within specified distance (um) of each other.  V Spines. Return spines where the z-plane of the spine head is farther (in z) from the connected backbone/dendrite line.  ROI Bounds. Return spines with background ROI within specified distance (um) from edges of image. This is useful if stack alignment has been run causing images to be shifted/rotated resulting in undefined regions on the edge of the image.  Segment Ends. Return objects within specified distance (um) of the end of their segment/backbone line.Map Tab  Addition.  Subtraction.  Persistent.  Transient.  Bad Runs. Return a list of objects that have a mixture of good and bad within their respective run. This is used for debugging and will be removed.  Re Added. Return a list of added spines that have a previous subtraction (on a previous timepoint) that is within specified distance along the backbone/dendrite.Manual TabReturn a list of objects matching a user specified criterion.Do this by selecting a statistic in the list, specify a value, and an operator (&amp;gt;, &amp;gt;=, &amp;lt;, &amp;lt;=, =, Not).For example, to generate a search of all long spines, select sLen2d/IntCh1, enter a spine length (um) like 4, select ‘&amp;gt;’ operator and press the ‘Manual Search’ button.",
      "url": "/search-panel",
      "author": "",
      "category": "interface",
      "date": "Apr 2015"
    }
    ,
  

    "run-plot": {
      "title": "Run plot",
      "content"	 : "A run plot is a sequence of stack plots, one for each session in a map. The image above shows a run plot of spines. Spine # 201 is selected in each of three stack plots.There are three types of run plots:  Stack Run. In its simplest form, a run plot showing the sequence of stacks in a map.  Segment Run. The same as a stack run plot but connected segments are selected, displayed, and optionally zoomed.  Object Run. The same as a stack run plot but individual stack db points (3D points) are followed across sessions in a map. One example is a run of spine objects across all stacks/sessions in a map.Opening a run plotA run plot can be opened from multiple places in the interface. In general, a right-click on a session or object will open a contextual popup-menu (shown on the left).  Right-click an object in a map plot.  Right-click an object in a search results.  Right-click a session in the expanded main map maker panelNavigating a run plotEach stack plot plot in a run plot behaves exactly like an individual stack plot. For example, left-click to select individual objects in any of the stack-db plots within a run plot.There are additional interface elements available in a run plot.      Control+click on an object in one stack plot of a run plot will select that object in all other stack plots of the run plot. If a stack plot at a given session is missing the object (for example, the object was subtracted), the image will snap to the region where the point ‘would be’.        Keyboard-l (that is lower-case ‘l’ as in ‘link’) will link all stacks in a run plot allowing them to be zoomed and panned in synch. Linking can be turned on and off again by pressing keyboard-l.        keyboard a/s/p/b, see below  Editing dynamics in a run plotThe dynamics between stack-db objects and segments can be edited in a run plot.  a : The selected object is marked as Addition.  s : The selected object is marked as Subtraction  p : The selected objects are marked as Persistent. Requires a selection in two timepoints, see below.  b : The selected object is marked as Bad. This is only available for stack-db objects, it is not available for segments.Persistent is a special caseWhen two objects are connected between two sequential timepoints/sessions we refer to them as ‘persistent’. To connect two points and make them persistent, both points need to be selected (in their respective timepoints) and the point in the latter timepoint needs to be marked persistent.  Click in the source stack window and select an object. For example, timepoint 2.  Click in the destination stack window and select an object. For example, timepoint 3.  Press keyboard ‘p’ in the destination stack window. In this example, timepoint 3.Important: The keyboard commands above will default to editing the dynamics of stack-db objects. To edit the dynamics between segments, turn on the global option in the main Map Manager panel by checking ‘Edit Segments’.All of these keyboard commands have corresponding right-click contextual menus. Select a point and right-click to open the contextual menu.Using stack db object tags in a run plotTurn on object tags for a given stack window using keyboard ‘t’. The dynamics of each object is encoded in the color of the tag, green for addition, red for subtraction, and yellow for persistent. Objects that are in the same run will have the same number in each of the stack plots. Added objects get a new number. This system is designed to quickly visualize the connectivity between stack db objects.Example run plot following a spine (yellow circle) through multiple timepoints in a map.Same run plot as above after zooming in. All stacks in a run plot can be synchronized with keyboard ‘l’ (as in Link) so that zooming, panning, and setting the slice in one stack plot of a run will propagate to all other stack plots of that run.A segment run plot with the same segment selected in all timepoints. Note the difference in scale compared to the spine run examples. All scale bars are 5 um.",
      "url": "/run-plot",
      "author": "",
      "category": "plot",
      "date": "Apr 2015"
    }
    ,
  

    "plot-panel": {
      "title": "Plot panel",
      "content"	 : "The plot panel provides an interface to make stack and map plots.Plotting a stack  Select a stack in the stack list  Select a Y stat  Select an X stat  Press ‘Spine Plot (stack)’ buttonPlotting a map  Specify the map to plot with ‘Grab Map’ button.  Select a Y stat  Select an X stat  Press ‘Spine Plot (map)’ buttonBoth the Y and X values can be normalized to a session as an absolute change (Abs) or a percent (%). We call this normalization session the ‘zero session’. The zero session for each map can be set in the main map manager panel using ‘Zero Session’. This can be over-ridden in the plot panel by turning on the checkbox and specifying a ‘Norm Session’Saved PlotsOnce a map plot is created, Saved Plots allows the x/y plot statistics to be grabbed and reused quickly. This saves time as the number of statistics in each x/y list is large and the names of each statistic is rather cryptic.Right-click a row in the list of Saved Plots and select a menu:  Grab Plot Window. Grab the x/y statistics from the top-most map plot and save it in the selected row.  Fill In Interface. Take a Saved Plot and fill in the x/y statistics in the stack plot panel.  Delete Plot. Delete a saved plot.Once a plot is saved (with ‘Grab Plot Window’), the x/y statistics can be filled in by double clicking.Double-click on a Saved Plot name to set its name.Saved plots are saved with the global map manager options in the main map manager options panel.",
      "url": "/plot-panel",
      "author": "",
      "category": "interface",
      "date": "Apr 2015"
    }
    ,
  

    "map-plot": {
      "title": "Map plot",
      "content"	 : "A map plot shows objects across multiple imaging sessions. Objects persisting from one session to the next are connected with a line.All map plots are interactive. Selecting an object will propagate this selection to other map and stack plots.A large number of map plots can be generated using the plot panel.There are two special plots provided in the main map manager panel: Spine Map and Segment Map.InterfaceKeyboard                   Key      Result                  Navigation                                   Arrow-keys      Pan                     +/-      Zoom in/out                     mouse-wheel      Zoom in/out                     enter      Full Zoom (reset zoom)              Data                                   esc      Cancel selection (including masks)                     b      Mark selected object as bad (press ‘b’ again to mark it good                     e      Edit plotted data in table              General                                   r      refresh plot                     d      toggle dynamics coloring                     f      toggle forced coloring                     c      toggle top control bar                     i      open/close object info panel                     h      display help      ColorsThe colors of objects in a map denote their dynamics.  Green : Added  Red : Subtracted  Blue : Transient (1 session)  Yellow : Persistent  White : BadTop control barToggle the top control bar on and off with keyboard ‘c’.  Segment ID. Plot individual segments. Use ‘All Segments’ to plot all segment.  Bad. Toggle display of bad objects.  Stats. Display a table of statistics for plotted data.  Raw. Display a table of raw data.  Line fit.ExamplesAll plots can be generated using the plot panel. There are two special plots provided in the main map manager panel: Spine Map and Segment Map.This is an example of a ‘Spine Map’. It shows the position of each spine on its dendritic segment. The lines connect persistent spines across sessions. Added spines are in green, subtracted spines in red, and transient spines are in blue.A map plot of spine length in μm (sLen2d) versus map session. The lines connect persistent spines across sessions. The colors are the same as the first example.A map plot of spine length in μm (sLen2d) for session 1 versus session 0. Each point is the length of a single spine measured in session 0 (bottom axis) and again in session 1 (left axis).",
      "url": "/map-plot",
      "author": "",
      "category": "plot",
      "date": "Apr 2015"
    }
    ,
  

    "making-a-map": {
      "title": "Making a map",
      "content"	 : "A map is a sequence of stacks. You create a map by appending stacks from the stack browser. Once a map is made it can be opened, saved, annotated, and browsed using the main map maker panel.The main Map Manager panel shows a list of open maps on the left. When a map is selected (a5n in this example), a list of sessions in the map are shown on the right (in this example there are 4 sessions).Open and initialize Map Manager  Open Igor Pro with MapManager.ipf  Initialize Map Manager with the main menu ‘MapManager - Map Manager Panel’.1. Pre-process your raw data so Map Manager can import itMap Manager will only import single channel stacks. If your stacks have two color channels, they need to be de-interleaved into two different .tif files. One .tif file for each color channel. See bAlignBatch for a Fiji plugin that does this.2. Make a new map  Fill in a new map name and choose the number of channels for each stack in your map.  Create a new map with ‘New Map’.  Append a stack from the Stack Browser with ‘Append Stack’.  Repeat # 3 for each stack.  Save the map with ‘Save Map’ button.Important  When you make a map, you need to choose the ‘Number Of Channels’ in each stack/session. Map Manager will only allow one choice of ‘Number Of Channels’ per map. You cannot mix one and two channel stacks within a map.  Make sure the scale of each imported stack is correct. It is hard to change the scale later. You can set the scale of a stack in its stack window with ‘shift+p’.  Make sure the sessions in your map are imported in the correct order. It is hard to change the order later.  As you import stacks from the stack browser there are some rules that must be followed. You will be prompted when you break these rules. In particular:          The stack scale must be set. Set the scale of a stack in a stack window with shift+p.      The stack must be loaded. Double click the stack in the stack browser to load a stack.      When importing 2 channel stacks, both channels must be loaded and you must select the first channel (ending in _ch1) in the stack browser.        New maps are saved to a default hard-drive folder. The default folder can be specified the Hard Drive Paths Panel. Right-click on a map name and select ‘Show On HDD’ to see the hard-drive folder where the map is saved.          On Windows, the default folder is ‘My Documents’.      On OSX, the default folder is ‘Documents’.      Congratulations, you just made a Map Manager map. The rest of this tutorial covers specifying and fitting segment backbone lines, adding spines, and connecting spines across timepoints.3. Create a line segment in each session/stack of the map and fit its backbone in FijiLine segments are first specified with control points and then fit using a custom FIJI plugin. Before fitting a line in FIJI, you need to install  the Bob_Neurite_Tracer_v3 plugin in FIJI and you need to specify the path to your FIJI application in the Hard Drive Paths Panel.See Fitting Segment In Fiji for help on FIJI versions, installing the plugin and specifying the FIJI application path in Map Manager.  Double-click the first session in your map (in the main Map Manager panel) to open a stack window.  Create a line segment by follow the instruction in annotating a stack.          Turn on Segment Editing with the checkbox next to ‘Line Segments’. You can also turn this on using ‘Edit Segments’ in the main Map Manager Panel.      Click the ‘+’ button to create a new (empty) segment.      Create Control Points along a segment with shift+click. Remember, all points are in 3D, make sure the points are in the correct imaging plane.      You can delete control points with the ‘delete’ key.      You can move control points with either the ‘m’ key or right-click menu ‘Move’.      Once control points are made, fit the backbone line in Fiji. Right-click on your segment in the list and select ‘Make from control points - Fiji’.        Repeat steps # 1 and # 2 for each session in your map. Making the same line segment in each session. As you make control points, be sure they are in the same direction along the segment for each session. For some help with the ordering of your control points, open the ‘stack db options’ panel and turn ‘Control Point Help’ ‘On’.  Set a pivot point in each line segment. Do this by clicking a point in the segment, right-click and select the ‘Set As Segment Pivot’ menu. The pivot point should refer to the same region of the segment across all session. A good strategy is to choose a region of the segment near an obvious spine that is present in all sessions. Another strategy is to choose a pivot point where some other segment (dendrite) crosses near your segment as these tend to remain stable across time. Try and put the pivot point near the center of the segment, do not place it at either end. The pivot point is used to calculate a line distance along the segment (in um) which in turn will be used to auto-guess connections between spines across sessions.Tip. When specifying control points and setting segment pivots, you can open multiple stack windows at the same time. Just double-click on each session in the main Map Manager Panel. This way, you can see the line segments you are making in each session of your map.4. Connect your line segments together  Close all stack windows using the Close Windows button in the main Map Manager panel.  Open a new stack run by right-clicking a session in your map and selecting the ‘Plot Run +- All’ menu.  Turn on the ‘Edit Segments’ checkbox in the main Map Manager panel. It is in the lower left of the panel.  Sequentialy connect your line segment from one timepoint to the next          Select the source timepoint segment (for example, timepoint 1). Make sure you select a point on the segment backbone line.      Select the destination timepoint segment (for example, timepoint 2). Again, make sure you select a point on the segment backbone line.      In the destination timepoint window (e.g. timepoint 2), press keyboard ‘p’ for Persistent (or use right-click menu).      Tip. You can see how your segments are connected by plotting a &#39;Segment Map&#39; from the main Map Manager panel. In the segment map window, right-click a segent and select &#39;Plot Run&#39; to plot a run of segments.5. Mark spines in each timepoint  Make sure ‘Edit Segments’ is off.  Open a single timepoint by double clicking a session in the list.  Follow annotating a stack to mark spines along your new segment.Tip. As you are working, keep your eye on the Igor command window. Each action you perform in Map Manager should report a few lines of text here. If this starts to spit out 1000&#39;s of lines there is probably a problem.6. Connecting stack db objects from one timepoint to the nextYou have two choices here.6.1 Use the Find Points Panel to connect objectsUse the Find Points Panel to browse spines in two timepoints. Find Points will also guess for the best connections and allow you to set them manually.6.2. Auto connect all objects using the map plot  Open a ‘Spine Map’ from the main Map Manager Panel.  In the spine map, select a spine in the first timepoint, right click and select ‘Connect Objects To Next’. This will make automatic connections of all spines from the first session to the next session.  Repeat this process for each pairwise session in your stack. You can also right-click and select ‘Connect All Objects’ to connect spines/objects through the entire map.  When working on spines, spines are connected if they are within a minimum distance of each other on their respective segment line. See ‘Connect spines within this distance (um)’ in the stack db options panel to set this option.7. Check the auto spine connections and edit as necessaryThis is the core of Map Manager and you will spend most of your time doing this. You need to verify the auto connections of each spine and you need to do this between each timepoint in your map. If your map has 4 timepoints, you need to verify the auto spine connections between timepoint 1-2, timepoint 2-3, and timepoint 3-4.  Open a run plot of three sequential timepoints by right-clicking a spine in the spine map and selecting ‘plot run +- 1’.  In the run plot windows, select a spine in the middle timepoint with ctrl+click. This will bring up the spine and its associated connections in all windows of the spine run. If there is no spine in a given timepoint, the image will be snapped to where the spine ‘would-be’.  From the middle timepoint spine selection, go to the next spine along the segment using keyboard ctrl+right. Go to the previous spine along the segment using keyboard ctrol+left.  Correct any errors in the spine dynamics using keyboard ‘a’ for addition, ‘s’ for subtraction, and ‘p’ for persistence. See run plot for details.8. Review your work by using search to query all additions and subtractions  Open the search panel from the main Map Manager panel with the ‘Search’ button.  In the search panel, make sure ‘map’ is slected and search for all spine additions with the ‘Additions’ button.  All added spines will appear as a list in the search results.  Right-click on a spine and select ‘plot run +- 1’ to bring up a spine run. [HERE I NEED TO CHANGE THE INTERFACE. I NEED A QUICKER WAY OF BRINING UP A SPINE RUN!!!]THIS IS WHERE I AM ENDING FOR NOW ON July 29, 2015 … THIS NEEDS TO BE EXPANDEDDO NOT READ BELOW HERE !!!![ADVANCED]: Importing a bSpine mapImporting bSpine maps is tricky. The problem is if your original maps for one time-series (_d1, _d2, etc.) have different sessions. For example, _d1 has sessions from dates 1,2,3 but _d2 has sessions from dates 1,2,6,12 there will be an error.Thus, there are two cases:      Your maps _d1, _d2 etc. all have the same exact sessions This is simple, use ‘Batch import bSpine map’. You will be prompted for the first map (you should select _d1). Once this is done, you need to hit all the buttons in ‘(2) fix’ to complete the import and then ‘save map’ in the main Map Manager panel.        Your maps _d1, _d2 etc. have different sessions.This DOES NOT WORK.  This documentation is not done#### Import group      Import One bSpine map. … not done        Append One bSpine map. … not done  #### Fix group  ** I am sick of writing documentation. Please see Bob for instructions. **",
      "url": "/making-a-map",
      "author": "",
      "category": "workflow",
      "date": "Apr 2015"
    }
    ,
  

    "main-panel": {
      "title": "Main panel",
      "content"	 : "The main map manager panel provides an interface to load, save and browse Map Manager maps. Open the main map manager panel using the menu ‘MapManager - Map Manager Panel’Expand the main map manager panel to access the map making interface. Use the disclosure triangle/+ at the top of the window near the help/? button.Once a map is created and saved, the main map manager panel can be minimized again with the disclosure triangle.The blue buttons operate on the selected map.Load Map. Load a map from the hard-drive.Save Map. Save the selected map. Ctrl+click to save the entire map including all stackdb, lines, and intensity analysis.?. Open map manager documentation in your default web browser.PlotObject Map. Open a map plot showing the position of spines along dendritic segments vs. session.Segment Map.  Open a map plot showing the segments within each session and the connectivity of segments across sessions.X-Axis. Choose different X-Axis for Object and Segment map plots. Available X-Axis are:  Sessions  Datetime  Days  Hours  Zero Sessions  Zero Days  Zero HoursDatetime, Days and Hours require stacks to have a date/time specified. Specify a custom date/time by turning on ‘Edit Date/Time’ in the Map Making Tab. The X-Axis options starting with ‘Zero’ use a session in the map as a zero timepoint. Specify this with ‘Zero Session’ in the expanded map manager panel. The zero session for a map will have a ‘*’ in its session list. Zero Session is also used by the Plot Panel.PanelsEach of these buttons will open a different Map Manager panel.Search. Open the search panel.Plot. Open the plot panel.Contrast. Open the contrast panel.Map DB. NOT DOCUMENTED YET..Find Points. Open the Find Points panel.MiscellaneousUnload stacks. Unload all stacks in the selected map (from Igor memory). Ctrl+click to unload all stacks in all open maps.Close Windows. Close all windows associated with the selected map.Username. This can be specified in the map manager options panel.Edit Segments. When checked, all editing in a run plot will edit the persistence of segments (addition, subtraction, and persistent).Right-click on a map name in the list for a contextual menu.Show on HDD. Shows the hard-drive folder where the map is saved.Map stats. Not implementedEdit map NV. ADVANCED USERS, this shows a map as a text table.Close map. Close a map, removing it and all associated analysis from Igor memory.Plot TabMap Making TabIntensity TabUtility TabReport Tab",
      "url": "/main-panel",
      "author": "",
      "category": "interface",
      "date": "Apr 2015"
    }
    ,
  

    "layout-panel": {
      "title": "Layout panel",
      "content"	 : "The layout panel provides an interface to tweak Igor plots.",
      "url": "/layout-panel",
      "author": "",
      "category": "imagingcore",
      "date": "Apr 2015"
    }
    ,
  

    "database-overview": {
      "title": "Database overview",
      "content"	 : "Map Manager builds a database of 3D objects and line segments within a single stack. Stacks and their associated 3D objects and line segments can then be connected together into a time-series with a map.Manage a stack db for a single stack with the stack db interface.Manage a map with the map making interface.DefinitionsStackA 3D image.Stack Database (stack db)A collection of 3D points and line segments within a single stack.Line SegmentA line tracing within a single stack.MapA time-series of stacks and their associated stack db(s).RunA sequence of stacks. A run can follow either 3D points or line segments for each stack in a map.",
      "url": "/database-overview",
      "author": "",
      "category": "post",
      "date": "Apr 2015"
    }
    ,
  

    "contrast-panel": {
      "title": "Contrast panel",
      "content"	 : "The contrast panel provides an interface to set global display parameters for a stack. The values specified in this panel will be used each time a new stack window is opened. These values are also saved when stack db options are saved in the stack db options panel.",
      "url": "/contrast-panel",
      "author": "",
      "category": "imagingcore",
      "date": "Apr 2015"
    }
    ,
  

    "stack-browser": {
      "title": "Stack Browser",
      "content"	 : "The stack browser is the main starting point for using Map Manager. The stack browser provides an interface to load and browse folders of .tif stacks.The list on the left is a list of loaded folders, each folder has a list of stacks. The list on the right shows the stacks in the selected folder. Select a folder on the left and the list on the right will show the individual stacks within that folder.Double click a stack to open a stack window.Loading stacksLoad Generic FolderThe Load Generic Folder button loads a folder of single-channel .tif stacks. Once loaded, the following should be filled in for each stack  The stack scale can be automatically set for all imported stacks using the um/pixel x/y and z fields. This assumes all stacks in a folder have the same scale. The scale of individual stacks can then be set in the [stack][stack] window using shit+p.  If the source .tif stack are multi-channel stacks, see bAlignBatch for a Fiji plugin to pre-process your .tif stacks into ch1/ch2 file pairs.Load ScanImage FolderThe Load ScanImage Folder loads a folder of ScanImage .tif stacks.Important. When importing ScanImage .tif files, the scale is not set by ScanImage. You need to calculate your x/y voxel size (in um per voxel) when you scan at 1x magnification with 1024 by 1024 pixels. You then set this value in &#39;2p um/pixel (1024@1x)&#39;. Map Manager will use this value to calculate each stacks x/y scale for arbitrary ScanImage zoom settings.Drag and dropThe simplest way to load a stack is to drag and drop a .tif file onto the Igor program icon. Stacks opened in this way will appear in a special folder (in the list on the left) called ‘DragAndDrop’.Tip. The order of stacks can be sorted by selecting columns in the stack list. To sort by date, select &#39;Date&#39; in the columns header. This ordering is critical when batch importing a list of stacks into a Map Manager mapBrowsing loaded dataSelect a loaded folder on the left and the stacks in that folder will be shown on the right. Double click a stack in the list on the right to open a stack window.Right-click a folder in the folder listRight-click a folder to open a contextual menu.Unload Folder. Unload the folder and all its stacks.Segment Report (all stacks). Generate a segment report for all stacks.Export Analysis (all stacks). Generate a table with all analysis. This can then be further analyzed in other environments like Matlab or Python. Please see the example Python code.Intensity Analysis (all stacks). Analyze the intensity of all stacks in the folder. It is critical that each spine in the analysis is checked manually. Please see Intensity Analysis.Save (all stacks). Will save all dirty stacks in a folder. Dirty stacks are stacks that have been changed or modified since they were loaded. Dirty stacks are noted in the stack list with a red background in the ‘D’ column.Show Folder On Disk. Open the hard-drive folder the folder was originally loaded from. This opens a Finder window on OSX and an Explorer window on Microsoft Windows.Refresh List. To refresh the list of folders and the selected folder’s list of stacks.Right-click a stack in the stack listRight-click a stack to open a contextual menu. These menu items can also be triggered using the indicated keyboard shortcuts.Display Stack. Open a [stack][stack] window. Same as double-clickUnload Stack. Unload the raw data for a stack.Segment Report. Generate a segment report for all segments in a stack. See reports.What is next?Once a folder of .tif stacks is loaded  Start scoring single timepoint stacks following annotating a stack  Put the stacks into a time-series map following making a map",
      "url": "/stack-browser",
      "author": "",
      "category": "imagingcore",
      "date": "Apr 2015"
    }
    ,
  

    "annotating-a-stack": {
      "title": "Annotating a stack",
      "content"	 : "This describes a workflow for annotating 3D points in a single stack. Please see making a map to collect a sequence of stacks into a timeseries map.1. Open and initialize Map Manager  Open Map Manager in Igor Pro (double-click the Map Manager.ipf file).  Click in the Igor Pro command window to compile (the command window is titled ‘Untitled’).  Open the Stack Browser window by selecting the main menu ‘MapManager - Stack Browser’.2. Load a stack  Either  Load a directory of .tif files using the ‘Load Generic Directory’ button.  Or  Drag and drop a single .tif stack onto the Igor Pro program icon.3. Display a stackOnce a stack is loaded in the Stack Browser, double-click on its name in the list to display the stack in a Stack window.4. Add 3D annotationsEach stack can have a list of 3D annotations, we call this a stack database (stack db).  In a stack window, open the stack db toolbar with keyboard ‘[’.  Add a new 3D point with shift+click.  Delete a point by selecting the point (mouse left-click) and hitting keyboard ‘Delete’ or ‘Backspace’.  Each point can have a textual note, select the point and fill in a note in the field below the list of points.5. Save your work  Save a stack db using the ‘Save’ button.  Load a previously saved stack db with the ‘Load’ button.  Important: You are responsible for saving your stack db. Use the ‘Save’ button.Stack scalePlease set the proper X/Y/Z scale before making any stack db points. Set the X/Y/Z stack scale in the main stack window with keyboard ‘shift+p’.Once 3D points are created, the scale can not be changed.You need to set the proper X/Y/Z stack scale, in um, with keyboard &#39;shift+p&#39;. This is a critical step in Map Manager as many measurements are made using um. Once stack db points are reated the scale can not be changed.Creating 3D objectsChoose the type of object in the ‘New Object’ group and shift+click in the image to create the object. All objects are 3D points, the z value of an object will be the currently viewed image plane when the object is create. Different object types can be independently searched, plotted and connect together in a map.  Spine : A spine is always connected to a segment (its parent segment). Thus, to create a spine, its parent segment must first be selected..  Bouton : This also requires a parent  vBranch :  soma :  peri :  controlPnt : Points along a segment that are used to fit a line in FIJI.  other :Tip. All objects are 3D points. The z position of a point is the imaging plane that is viewed when the point is created. To create a new point with better precision, zoom in the stack window with keyboard &#39;+&#39;. The zoom will follow the mouse pointer.Editing 3D objectsStack DB toolbarThe stack db toolbar displays a list of line segments and a list of points. Open and close the stack db toolbar with keyboard ‘[’.Selecting an objectSingle-click on the object. Selected object will appear as yellow circles. PRess keyboard ‘esc’ to cancel a selection.Moving an objectSelect the object (single click), right-click and select ‘Move’. Your next click will be the new 3D position of the object. You are given feedback in the bottom of the stack window. Press ‘esc’ to cancel a move.Deleting an objectSelect the object (single click), right-click and select ‘Delete’. ALternatively, select the object (single-click) and hit the ‘del’ key.Exporting dataIt is very easy to export the 3D coordinates of the points in a stack DB.In the stack db toolbar of the main stack window, click on the list of points and then press keyboard ‘e’. This will open a text table of all points in the stack db, you can copy and paste it into your favorite analysis program. See stack report for more information.When you save a stack db you are saving all the points in a single text file. The file can be found in a folder named ‘stackdb’ in the hard-drive folder of your original stack. See File formats for more information.Line SegmentsLine segments are fit in Fiji using a special plugin, please see Fitting segments in Fiji to install this plugin.Existing line segments are listed in the ‘Line Segment’ group. Each line segment has a length (um), a number of objects (nObj), a radius (r), and a color (c).Creating line segments  Make sure ‘Edit Segments ‘ is turned on.  Create a new (empty) line segment  Click ‘+’ button in the ‘Line Segment’ group. This will create an empty line segment.  Make a series of 3D control point objects along your dendrite/axon          Select ‘New Object -&amp;gt; Other -&amp;gt; Control Point’      Shift-click in the image to create a control point.      Continue making control points along the desired line segment in the image.        Fit the line in FIJI and import the resulting line segment back into map manager          Right-click on the new line segment (in the top left list) and select ‘Make From Control Points - FIJI’. This will open the ‘Bob Neurite Tracer’ plugin in FIJI, fit a line to your control points and open the fitted line segment in the map manager stack window.      Important: When making control points, they need to be in order along a segment. If you double-back a control point on the segment, the line fit with dumbly follow this ordering of control points. If it all gets confusing you can just delete all your control points and start over.Important: When making a map, you will be associating individual line segments  from one session to the next. For segments that you will connect together in a map, make sure your control points are in the same general direction along each segment. If your control points go left to right in session 1, they should also go left to right in session 2.Line segment radiusEach line segment has a fixed radius in um. Spines are connected to this radius. To change the radius, double-click the radius for a segment and enter a new number. The radius of each segment is displayed in the ‘r’ column. Setting the radius will reconnect all your spines to that new radius while preserving the spine connection point to the line. To set all the radii of a run of connected segments, right click on the segment in the list and select ‘Set run to same radius’.Line segment pivot pointsWhen in a map, line segments need a ‘pivot point’. Specify a pivot point for a segment by clicking a point in the segment, right-click and select the ‘Set As Segment Pivot’ menu.The pivot point should specify a region of the segment that is the same in all sessions. A good strategy is to choose a region of the segment near an obvious spine that is present in all sessions. Another strategy is to choose a pivot point where some other segment (dendrite) crosses near your segment as these tend to remain stable across time. Try and put the pivot point near the center of the segment, do not place it at either end. The pivot point is used to calculate a line distance along the segment (in um) which in turn will be used to auto-guess connections between objects (spines) across sessions.Search panelOpen the Search panel from the stack db toolbar using the ‘Search’ button.The search panel will search a stack db and return a list of points. Once generated, clicking on a point in the search results will display the point in the main stack window.Different types of searches are performed with buttons:  All : Generate a list of all stack db points.  Notes : Generate a list of stack db points with notes.  Close : Search for points that have other points that are close.Once a search is performed, the search panel will display a list of results. Each row in the list of results is a point in the stack db. Single-click on a point in the list and it will be selected in the main stack window.If you zoom the stack window (keyboard +) you can snap to different points while maintaining the zoom using the search panel ‘Snap’ checkbox.The search results are a static output report. Once a search is performed, if points in the main stack window are modified (add, delete, move) the search results will not be automatically updated. If the points are modified in the main stack window and you want to use the search results, regenerate the search.Options panelOpen the Stack DB Options Panel from the stack db toolbar using the ‘Options’ button.",
      "url": "/annotating-a-stack",
      "author": "",
      "category": "workflow",
      "date": "Feb 2015"
    }
    ,
  

    "stack": {
      "title": "Stack",
      "content"	 : "OverviewA stack window displays a 3D image stack, one image plane (slice) at a time.  Use the mouse-wheel to scroll up and down through images, arrow keys to pan, +/- to zoom. Zooming with keyboard +/- follows the mouse pointer.  Image contrast is critical, open the contrast control bar with keyboard ‘c’ and adjust min/max contrast with sliders. If contrast is not set properly you will not see objects in your image that are actually there.  View a pixel intensity histogram with keyboard ‘h’.  Right-click a stack for a contextual menu for most of the features described below.  Closing a stack window does not remove it from memory (the stack remains open).Annotating a stackMake new 3D points with shift+click. All points are 3D, the z position of a point will be the current viewed image when the 3D point is created. See annotating a stack for details on creating and editing 3D points and lines. To easily manage a stack db, open the left stack db panel with keyboard ‘[’.Voxel sizeThe x/y/z voxel size of each stack is set with keyboard ‘shift+p’. Setting the correct voxel size in µm is critical as MapManager performs many calculations in µm (NOT IN PIXELS). The voxel size must be set before annotations are created. Once annotations are created, you should not change the voxel size.Scale barEach stack will display a white scale bar in µm. Control the length of the scale bar in Options.Viewing multiple channelsUse keyboard ‘1’ and ‘2’ to switch between channels. Channels can also be selected using the right-click menu.Contrast barThe contrast bar is used to set the contrast of the images displayed in a stack window.  Open the contrast bar with keyboard ‘c’ or use the right-click menu  Pixel intensity values below ‘min’ will be displayed as black  Pixel intensity values above ‘max’ will be displayed as whiteHistogramThe histogram window show a histogram of pixel intensity values for each image in a stack.  Open the histogram window with keyboard ‘h’ or use the right-click menu.  The histogram window shows a pixel intensity histogram for one image.  Scroll through the image in a stack (mouse-wheel) and the histogram for each image will be show.Window Candy  There are five different window decorations or candy options: (i) all, (ii) none, (iii) scale, (iv) scale + scroll, and (v) something else.  Cycle different window candies with keyboard ‘shift+c’.  Set the default window candy in Options.  Note: The grid will only display when window candy is set to ‘All’ (when the stack axis are visible).Making Z-ProjectionsOpen a maximal Z-Projection with keyboard ‘z’ or use the right-click menu. This allows you to set the top and bottom slice that goes into the Z-Projection.Once the Z-Projection window is open, it behaves just like a stack window (with only one slice). For example, you can zoom with +/-, pan with arrow keys, open the contrast bar with keyboard ‘c’, view a histogram with keyboard ‘h’, and copy/paste the image to another program, etc., etc.Viewing a sliding z-projectionA sliding Z-Projection is a special stack where each image plane is replaced by a small maximal Z-Projection showing slices just above and below the image plane you are viewing.You can switch to a sliding Z-Projection just like you can switch channels. Switch to a sliding Z-Projection for channel 1 with keyboard ‘3’ and for channel 2 with keyboard ‘4’. You can also use the right-click menu to switch to the sliding z-projection view.Options for the sliding Z-Projection are set with ‘Stack Browser Options’. Open the Stack Browser Options from the main map manager menu bar. See the end of the page documenting Options.Navigation windowThe navigation window opens a new window with a maximal z-projection of the stack and shows the current zoomed view as a blue square.  Right click and select ‘Navigation Window’ menu. A navigation window will be opened and your current zoomed view of the stack will be shown as a blue square.  Zoom with +/- or pan with arrow keys and the blue-square tracks what you are looking at.  The navigation window is, by default, a maximal z-projection of the entire stack.Zoom windowRight click and select ‘Zoom Window’. The zoom window will follow the mouse pointer and show a zoomed in region of the current image.Point infoThe Point Info window shows information about the currently selected object.  Open the Point Info window from any stack window using keyboard ‘i’.  Use the point info window to annotate objects with text notes.Right clickRight-click on the image and you will get a contextual menu to activate the features described on this page.Copy/Paste into other programsIgor Pro is very good at copying image data to the clipboard so it can be pasted into other programs. From a stack window, copying will copy the image with all the annotations, it does not copy the contrast (top) and scoring (left) toolbars. The scoring can be hidden by double-clicking the image, selecting all the Traces and clicking the ‘Hide Trace’ checkbox.Keyboard commandsMap Manager makes heavy use of keyboard shortcuts. Use the right click menu to see the mapping between the function and the key. Here is a list of keyboard shortcuts. In a stack window, use keyboard ‘shift+h’ to print this table.            Topic      Keyboard      Action                  Navigation                                   arrow-keys      Pan image                     +/-      Zoom image                     Enter      Full zoom image                     ]      Toggle between 2 different window sizes              Image Display                                   1      Channel 1                     2      Channel 2                     3      Sliding Z-Project - Channel 1                     4      Sliding Z-Project - Channel 2              Toolbars                                   c      Toggle contrast toolbar (top)                     [      Toggle scoring toolbar (left)              New Windows                                   h      Histogram                     z      Maximal Z-Projection                     shift+z      Maximal Z-Projection - Options                     i      Object info panel                     shift+i      Stack info panel              Voxel Size                                   shift+p      Set voxel size              Other                                   /      Start and stop movie of slices                     shift+c      Toggle 4 different window candy options                     shift+h      Print this help              Object Scoring                                   b      Toggle selected object bad                     control + left arrow      Go to previous object                     control + right arrow      Go to next object              Map Run                                   l      Link window (lower case ‘l’ as in link)                     a      Make selected object addition                     s      Make selected object subtraction                     p      Make selected object persistent      ",
      "url": "/stack",
      "author": "",
      "category": "imagingcore",
      "date": "Jan 2015"
    }
    
  
}